import{_ as e,c as a,o as t,N as l}from"./chunks/framework.1e6a71f2.js";const m=JSON.parse('{"title":"JS","description":"","frontmatter":{},"headers":[],"relativePath":"articles/JS.md"}'),i={name:"articles/JS.md"},o=l('<h1 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-label="Permalink to &quot;JS&quot;">​</a></h1><h2 id="js数据类型" tabindex="-1">JS数据类型 <a class="header-anchor" href="#js数据类型" aria-label="Permalink to &quot;JS数据类型&quot;">​</a></h2><ul><li>基本数据类型：Number、String、Boolean、Null、Undefined、Symbol、bigInt <ul><li>Symbol是ES6新出的一种数据类型，没有重复的数据，可以作为object的key</li><li>BigInt也是ES6新出的数据类型，特点是数据涵盖的范围大，能够解决超出普通数据类型范围报错的问题</li></ul></li><li>引用数据类型：object、Array、Date、Function、RegExp</li></ul><h2 id="闭包" tabindex="-1">闭包 <a class="header-anchor" href="#闭包" aria-label="Permalink to &quot;闭包&quot;">​</a></h2><ul><li>定义：能够读取其他函数内部变量的函数。</li><li>形成原理：作用域链，当前作用域可以访问上级作用域中的变量。</li><li>好处：可以读取函数内部的变量，将变量始终保持在内存中，可以封装对象的私有属性和私有方法。能够让函数作用域中的变量在函数执行结束之后不被销毁，同时也能在函数外部可以访问函数内部的局部变量。</li><li>坏处：耗费内存，使用不当会造成溢出。</li></ul>',5),r=[o];function n(s,c,_,d,h,u){return t(),a("div",null,r)}const b=e(i,[["render",n]]);export{m as __pageData,b as default};
