import{_ as a,o as e,c as t,N as c}from"./chunks/framework.cda25d75.js";const k=JSON.parse('{"title":"Webpack","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Webpack.md"}'),i={name:"articles/Webpack.md"},r=c('<h1 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;Webpack&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>Webpack是一个用于现代JavaScript应用程序的静态模块打包工具。</p><p>Webpack的能力：</p><ul><li>编译代码能力，提高效率，解决浏览器兼容问题</li><li>模块整合能力，提高性能，可维护性，解决浏览器频繁请求文件的问题</li><li>万物皆可模块能力，项目维护性增强，支持不同种类的前端模块类型，统一的模块化方案，所有资源文件的加载都可以通过代码控制</li></ul><h2 id="webpack和vite区别" tabindex="-1">Webpack和vite区别 <a class="header-anchor" href="#webpack和vite区别" aria-label="Permalink to &quot;Webpack和vite区别&quot;">​</a></h2><ul><li>Webpack先打包，再启动开发服务器，请求服务器时直接给予打包后的结果。</li><li>vite直接启动开发服务器，请求哪个模块再对哪个模块进行实时编译。</li></ul>',7),l=[r];function o(p,s,n,_,b,d){return e(),t("div",null,l)}const u=a(i,[["render",o]]);export{k as __pageData,u as default};
